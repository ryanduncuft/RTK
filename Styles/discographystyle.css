/* My note: Inheriting global styles like fonts, base colors, and spacing variables. */
@import url(homestyle.css);

/* --- Variables for Discography Theming --- */
:root {
  /* My note: Mapping general theme colors to discography-specific variables for clarity. */
  --primary-color-discography: var(--primary-color);
  --secondary-color-discography: var(--primary-hover-color);
  --text-color-discography-light: var(--light-text-color);
  --card-bg-discography-light: var(--light-card-bg);
  --card-shadow-discography-light: var(--light-card-shadow);
  --border-color-discography-light: var(--light-card-border);
  --sparkle-color-discography-light: #ffeb3b; /* My note: Yellow sparkles for light mode. */

  /* Define a consistent width for discography items for single-item layout */
  --discography-item-width: 300px; /* Adjust this value as needed for desired card width */
}

/* My note: Dark mode overrides for discography-specific variables. */
body.dark-mode {
  --text-color-discography-light: var(--dark-text-color);
  --card-bg-discography-light: var(--dark-card-bg);
  --card-shadow-discography-light: var(--dark-card-shadow);
  --border-color-discography-light: var(--dark-card-border);
  --sparkle-color-discography-light: #ffffff; /* My note: White sparkles for dark mode. */
}

/* --- Base Section Styling --- */
/* My note: Overall padding for the discography section. */
.discography {
  padding: var(--spacing-xxl) var(--spacing-md);
  transition: color 0.3s ease; /* Smooth transition for text color */
}

/* My note: Container for consistent content width. */
.discography .container {
  max-width: 1300px; /* Aligned with homestyle.css global max-width. */
  margin: auto;
  padding: 0;
}

/* My note: Styling for the main page title (e.g., "Discography"). */
.page-title {
  font-size: 3rem;
  color: var(--text-color-discography-light);
  text-align: center;
  margin-bottom: var(--spacing-xxl);
  letter-spacing: 1.5px;
  text-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* --- Navigation Buttons (Filter/Category Buttons) --- */
/* My note: Layout for the navigation buttons, allowing them to wrap. */
.discography-nav {
  display: flex;
  justify-content: center;
  margin-bottom: var(--spacing-xxl);
  flex-wrap: wrap;
  gap: var(--spacing-sm);
}

/* My note: Styling for individual navigation/filter buttons.
    The @extend is a preprocessor concept; manually applying properties. */
.nav-btn {
  background-color: var(--primary-color);
  color: #fff;
  padding: var(--spacing-xs) var(--spacing-md);
  border: none;
  border-radius: var(--border-radius-sm);
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease-out;
  display: inline-block; /* Allows side-by-side display */
  text-decoration: none; /* Removes underline from links */
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

/* My note: Active and hover states for navigation buttons. */
.nav-btn.active,
.nav-btn:hover {
  background-color: var(--primary-hover-color);
  transform: translateY(-3px); /* Subtle lift effect */
  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
}

/* --- Release Grid (Proper Masonry Container) --- */
.release-grid {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: 0;
  transition: opacity 0.5s ease-in-out;
  padding: 0 var(--spacing-md);
}

/* My note: The JavaScript will create these column divs inside .release-grid */
.masonry-column {
  display: flex;
  flex-direction: column;
  flex: 1; /* Allow columns to grow/shrink */
  /* --- FIX: Set a max-width to prevent single column from stretching too wide --- */
  max-width: var(--discography-item-width); /* Default max width for a single column */
  /* This will be overridden by JS for multi-column layouts, but ensures single column is constrained */
}

/* My note: Specific layout for a single item (JS will handle centering) */
.release-grid.single-item-grid {
  /* This class is for when JS detects only one column */
  justify-content: center; /* Center the single column */
  /* No need to set max-width here, it's now on .masonry-column */
}


/* My note: Fade effects for grid content when filtering. */
.release-grid.fade-out {
  opacity: 0;
}
.release-grid.fade-in {
  opacity: 1;
}

/* --- Individual Release Item --- */
.release-item {
  background: var(--card-bg-discography-light);
  border-radius: var(--border-radius-xl);
  box-shadow: 0 8px 20px var(--card-shadow-discography-light);
  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94),
    box-shadow 0.4s ease, opacity 0.3s ease;
  overflow: hidden;
  position: relative;
  border: 1px solid var(--border-color-discography-light);
  color: var(--text-color-discography-light);
  width: 100%; /* Ensure cards take full width of their masonry column */
  box-sizing: border-box;
  animation: fadeIn 0.6s ease-out forwards;
}

/* My note: Ensures the entire card is clickable if it's a link. */
.release-item a {
  display: block;
  text-decoration: none;
  color: inherit;
  height: 100%;
}

/* My note: Hover effect for the entire release card. */
.release-item:hover {
  transform: translateY(-8px);
  box-shadow: 0 15px 30px var(--card-shadow-discography-light);
}

/* My note: Wrapper for the album cover image, used for aspect ratio and overflow. */
.release-image-wrapper {
  position: relative;
  padding-top: 100%;
  overflow: hidden;
  border-bottom: 1px solid var(--border-color-discography-light);
}

/* My note: Styling for the album cover image. */
.release-item img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: var(--border-radius-xl) var(--border-radius-xl) 0 0;
  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* My note: Zoom effect on image when the card is hovered. */
.release-item:hover img {
  transform: scale(1.08);
}

/* My note: Container for text information about the release. */
.release-info {
  padding: var(--spacing-lg);
  display: flex;
  flex-direction: column;
}

/* My note: Styling for the release title (e.g., Album Name, Single Name). */
.release-info h3 {
  font-size: 1.8rem;
  color: var(--primary-color-discography);
  margin-bottom: var(--spacing-xs);
  font-weight: 700;
  line-height: 1.3;
}

/* My note: Styling for release date and type (e.g., "Album", "Single"). */
.release-info .release-date,
.release-info .release-type {
  font-size: 0.95rem;
  color: #777;
  margin-bottom: 5px;
  font-weight: 500;
}

/* My note: Dark mode adjustments for text colors within release info. */
body.dark-mode .release-info h3 {
  color: var(--secondary-color-discography);
}
body.dark-mode .release-info .release-date,
body.dark-mode .release-info .release-type {
  color: #bbb;
}

/* My note: Styling for the release description/synopsis. */
.release-info p {
  font-size: 1rem;
  color: var(--text-color-discography-light);
  line-height: 1.6;
  margin-top: var(--spacing-sm);
}

/* --- No Releases Message --- */
.no-releases-message {
  text-align: center;
  color: var(--text-color-discography-light);
  font-size: 1.2rem;
  padding: var(--spacing-xxl) var(--spacing-md);
  opacity: 0;
  animation: fadeIn 0.8s ease-out forwards;
}

/* My note: Dark mode text color for the "no releases" message. */
body.dark-mode .no-releases-message {
  color: var(--text-color-discography-dark);
}

/* --- Sparkle Animation Element --- */
.sparkle {
  position: absolute;
  background-color: var(--sparkle-color-discography-light);
  border-radius: 50%;
  opacity: 0;
  pointer-events: none;
  z-index: 2;
  filter: blur(1px);
  transform: scale(0);
}

/* My note: Trigger the sparkle animation on hover of the release item. */
.release-item:hover .sparkle {
  animation: sparklePop 0.8s ease-out forwards;
}

/* --- Keyframe Animations --- */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes sparklePop {
  0% {
    transform: scale(0) rotate(0deg);
    opacity: 0;
  }
  50% {
    transform: scale(1) rotate(180deg);
    opacity: 0.8;
  }
  100% {
    transform: scale(0) rotate(360deg);
    opacity: 0;
  }
}

/* --- Media Queries --- */

@media (max-width: 1024px) {
  .page-title {
    font-size: 2.5rem;
    margin-bottom: var(--spacing-xl);
  }
  .release-info h3 {
    font-size: 1.6rem;
  }
  .release-info .release-date,
  .release-info .release-type,
  .release-info p {
    font-size: 0.9rem;
  }
  /* --- FIX: Adjust single column max-width for tablets --- */
  .masonry-column {
      max-width: var(--discography-item-width); /* Keep consistent or adjust based on preference */
  }
}

@media (max-width: 768px) {
  .discography {
    padding: var(--spacing-xl) var(--spacing-sm);
  }
  .page-title {
    font-size: 2rem;
    margin-bottom: var(--spacing-lg);
  }
  .discography-nav {
    margin-bottom: var(--spacing-xl);
    gap: var(--spacing-xs);
  }
  .nav-btn {
    padding: var(--spacing-xs) var(--spacing-md);
    font-size: 1rem;
  }
  .release-grid {
    padding: 0;
  }
  .release-item {
    flex-direction: row;
    align-items: center;
    padding: var(--spacing-sm);
    margin-bottom: var(--spacing-md) !important;
  }
  .release-image-wrapper {
    width: 150px;
    height: 0;
    padding-top: 150px;
    flex-shrink: 0;
    border-radius: var(--border-radius-md);
    border-bottom: none;
    margin-right: var(--spacing-sm);
    position: relative;
    overflow: hidden;
  }
  .release-item img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: var(--border-radius-md);
    transition: none;
  }
  .release-item:hover img {
    transform: none;
  }
  .release-info {
    padding: 0;
  }
  .release-info h3 {
    font-size: 1.4rem;
    margin-bottom: 5px;
  }
  .release-info .release-date,
  .release-info .release-type {
    font-size: 0.85rem;
    margin-bottom: 3px;
  }
  .release-info p {
    font-size: 0.9rem;
    margin-top: var(--spacing-xs);
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  /* --- FIX: Adjust single column max-width for smaller screens (if still columnar) --- */
  .masonry-column {
      max-width: 100%; /* Allow full width as it's now row-based */
  }
}

@media (max-width: 480px) {
  .discography {
    padding: var(--spacing-lg) var(--spacing-xs);
  }
  .page-title {
    font-size: 1.8rem;
    margin-bottom: var(--spacing-md);
  }
  .discography-nav {
    margin-bottom: var(--spacing-lg);
    gap: 8px;
  }
  .nav-btn {
    padding: var(--spacing-xs) var(--spacing-sm);
    font-size: 0.9rem;
  }
  .release-item {
    padding: var(--spacing-xs);
  }
  .release-image-wrapper {
    width: 120px;
    height: 0;
    padding-top: 120px;
    margin-right: var(--spacing-xs);
    position: relative;
    overflow: hidden;
  }
  .release-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: var(--border-radius-md);
  }
  .release-info h3 {
    font-size: 1.2rem;
  }
  .release-info .release-date,
  .release-info .release-type,
  .release-info p {
    font-size: 0.8rem;
  }
  .release-info p {
    -webkit-line-clamp: 2;
  }
  /* --- FIX: Adjust single column max-width for smallest screens (if still columnar) --- */
  .masonry-column {
      max-width: 100%; /* Ensure full width on smallest screens */
  }
}